{"ast":null,"code":"var _jsxFileName = \"/Users/ronnypaz/Desktop/monster reworked/robot-searcher/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { fetchData } from './utils/robots-api.utils';\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [searchField, setsearchField] = useState('');\n  const [robots, setrobots] = useState([]);\n  const [filteredRobots, setfilteredRobots] = useState(robots);\n  useEffect(() => {\n    const getRobotUsers = async () => {\n      const users = await fetchData('https://jsonplaceholder.typicode.com/users');\n      setrobots(users);\n    };\n    getRobotUsers();\n  }, []);\n  const onSearchChange = event => {\n    const searchFieldString = event.target.value.toLowerCase();\n    setsearchField(searchFieldString);\n  };\n  useEffect(() => {\n    const newfilteredRobots = robots.filter(monster => {\n      return monster.name.toLowerCase().includes(searchField);\n    });\n    setfilteredRobots(newfilteredRobots);\n  }, [robots, searchField]);\n  return /*#__PURE__*/_jsxDEV(StyledApp, {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"app-title\",\n      children: \"Robot Searcher\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SearchBox, {\n      className: \"robots-search-box\",\n      placeholder: \"search robots\",\n      onChangeHandler: onSearchChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      robots: filteredRobots\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"+DmAVy2CgtXTUI4Bo0aBBbaYIDA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","fetchData","CardList","SearchBox","App","searchField","setsearchField","robots","setrobots","filteredRobots","setfilteredRobots","getRobotUsers","users","onSearchChange","event","searchFieldString","target","value","toLowerCase","newfilteredRobots","filter","monster","name","includes"],"sources":["/Users/ronnypaz/Desktop/monster reworked/robot-searcher/src/App.tsx"],"sourcesContent":["import { useState, useEffect, ChangeEvent } from 'react';\n\nimport { fetchData } from './utils/robots-api.utils';\n\nimport CardList from './components/card-list/card-list.component';\nimport SearchBox from './components/search-box/search-box.component';\n\nimport './App.css';\n\nexport type Robot = {\n  id: string;\n  name: string;\n  email: string;\n};\n\nconst App = () => {\n  const [searchField, setsearchField] = useState('');\n  const [robots, setrobots] = useState<Robot[]>([]);\n  const [filteredRobots, setfilteredRobots] = useState(robots);\n\n  useEffect(() => {\n    const getRobotUsers = async () => {\n      const users = await fetchData<Robot[]>(\n        'https://jsonplaceholder.typicode.com/users'\n      );\n      setrobots(users);\n    };\n    getRobotUsers();\n  }, []);\n\n  const onSearchChange = (event: ChangeEvent<HTMLInputElement>): void => {\n    const searchFieldString = event.target.value.toLowerCase();\n    setsearchField(searchFieldString);\n  };\n  useEffect(() => {\n    const newfilteredRobots = robots.filter((monster) => {\n      return monster.name.toLowerCase().includes(searchField);\n    });\n    setfilteredRobots(newfilteredRobots);\n  }, [robots, searchField]);\n\n  return (\n    <StyledApp className=\"App\">\n      <h1 className=\"app-title\">Robot Searcher</h1>\n      <SearchBox\n        className=\"robots-search-box\"\n        placeholder=\"search robots\"\n        onChangeHandler={onSearchChange}\n      />\n      <CardList robots={filteredRobots} />\n    </StyledApp>\n  );\n};\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAqB,OAAO;AAExD,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,OAAOC,QAAQ,MAAM,4CAA4C;AACjE,OAAOC,SAAS,MAAM,8CAA8C;AAEpE,OAAO,WAAW;AAAC;AAQnB,MAAMC,GAAG,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAU,EAAE,CAAC;EACjD,MAAM,CAACU,cAAc,EAAEC,iBAAiB,CAAC,GAAGX,QAAQ,CAACQ,MAAM,CAAC;EAE5DP,SAAS,CAAC,MAAM;IACd,MAAMW,aAAa,GAAG,YAAY;MAChC,MAAMC,KAAK,GAAG,MAAMX,SAAS,CAC3B,4CAA4C,CAC7C;MACDO,SAAS,CAACI,KAAK,CAAC;IAClB,CAAC;IACDD,aAAa,EAAE;EACjB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,cAAc,GAAIC,KAAoC,IAAW;IACrE,MAAMC,iBAAiB,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAACC,WAAW,EAAE;IAC1DZ,cAAc,CAACS,iBAAiB,CAAC;EACnC,CAAC;EACDf,SAAS,CAAC,MAAM;IACd,MAAMmB,iBAAiB,GAAGZ,MAAM,CAACa,MAAM,CAAEC,OAAO,IAAK;MACnD,OAAOA,OAAO,CAACC,IAAI,CAACJ,WAAW,EAAE,CAACK,QAAQ,CAAClB,WAAW,CAAC;IACzD,CAAC,CAAC;IACFK,iBAAiB,CAACS,iBAAiB,CAAC;EACtC,CAAC,EAAE,CAACZ,MAAM,EAAEF,WAAW,CAAC,CAAC;EAEzB,oBACE,QAAC,SAAS;IAAC,SAAS,EAAC,KAAK;IAAA,wBACxB;MAAI,SAAS,EAAC,WAAW;MAAA,UAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAK,eAC7C,QAAC,SAAS;MACR,SAAS,EAAC,mBAAmB;MAC7B,WAAW,EAAC,eAAe;MAC3B,eAAe,EAAEQ;IAAe;MAAA;MAAA;MAAA;IAAA,QAChC,eACF,QAAC,QAAQ;MAAC,MAAM,EAAEJ;IAAe;MAAA;MAAA;MAAA;IAAA,QAAG;EAAA;IAAA;IAAA;IAAA;EAAA,QAC1B;AAEhB,CAAC;AAAC,GArCIL,GAAG;AAAA,KAAHA,GAAG;AAuCT,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}